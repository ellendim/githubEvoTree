---
title: "GO enrichment"
author: "Ellen Dimmen Chapple"
date: '`r format(Sys.time(), "%d.%m.%Y")`'
output: 
  html_document:
    code_folding: hide
    toc: true
    number_sections: true
    toc_float: true
    theme: lumen
editor_options:
  chunk_output_type: console
---



```{r message=FALSE, warning=FALSE}

library(tidyverse)
library(GSEABase)
library(GOstats)
library(gdata)
library(VennDiagram)

```

## Gene ontology

- N, all expressed genes
- n, all expressed and annotated genes
- k, set of conserved genes
- x, genes that are conserved and annotated

```{r message=FALSE, warning=FALSE}

# EXPRESSED GENES
expressed_genes <- read_delim("Data/DATA/transcriptomicsData/AspWood_transcriptomics.txt")

# EXPRESSED GENES WITH ANNOTATION
go_list_file <- read_delim("Data/DATA/Potra22_blast2go_GO.txt",'\t')

# GO: + 7xd
go_list <- go_list_file %>% 
    separate(`Sequence Name`,into = c("Sequence Name","Sequence Variant"), sep = "\\.") %>%
    separate(`Annotation GO ID-Annotation GO Term`,into = c("GO ID","GO Term"), sep = "-", extra = "drop") %>%
    filter(`Sequence Name` %in% expressed_genes$Genes)

go_data_frame <- data.frame(go_id=go_list$`GO ID`, evidence=rep("ND", nrow(go_list)), 
                          gene_id=go_list$`Sequence Name`)
go_frame_object=GOFrame(go_data_frame,organism="Aspen")
go_all_frame_object=GOAllFrame(go_frame_object)

cat("Number of expressed genes: ", length(unique(expressed_genes$Genes)))
cat("Number of expressed genes with at least 1 GO-term: ", length(unique(go_list$`Sequence Name`)))
cat("Number of GO-terms: ", length(unique(go_list$`GO Term`)))
cat("Number of unique genes in main annotation file: ", length(unique(go_list_file$`Sequence Name`)))

# PARAMETERS
gene_set_collection <- GeneSetCollection(go_all_frame_object, setType = GOCollection())
universe <- expressed_genes$Genes

# FILES WITH GENES CONSERVED BETWEEN CLADES AND SPECIFIC FOR CLADES - ASPEN GENES
list <- c("Data/DATA/textFiles/cons_genes_aspen.txt", "Data/DATA/textFiles/gymnosperms_genes_aspen.txt", "Data/DATA/textFiles/angiosperms_genes_aspen.txt", "Data/DATA/textFiles/partial_3_genes_aspen.txt" )


pval_cutoff <- 0.05
for (i in 1:length(list)){
  

  gene_set <- read_delim(list[i], " ")
  gene_ID <- gene_set$Asp
  
  group_name <- sapply(strsplit(list[i], "textFiles/"), "[", 2)
  group_name <- sapply(strsplit(group_name, "_genes"), "[", 1)
  
  params <- GSEAGOHyperGParams(name="GSEA",
                               geneSetCollection = gene_set_collection,
                               geneIds = gene_ID,
                               universeGeneIds = universe, 
                               ontology = "BP",
                               pvalueCutoff = pval_cutoff,
                               conditional = FALSE,
                               testDirection = "over")
  
  hyper_g_test <- hyperGTest(params)
  summary_table <- summary(hyper_g_test)
  summary_table <- summary_table[summary_table$Count>1,]
  summary_table <- summary_table[,c(1,2,5,6,7)]
  colnames(summary_table) <- c("GO id","P-value","x","n","GO term")
  
  rownames(summary_table) <- 1:nrow(summary_table)
  
  summary_table$`P-value`<- format(summary_table$`P-value`, digits=3, scientific=TRUE)
 

   
  # Rename the summary table!
  
    new_name <- as.character(paste0("summary_table_", group_name, "_", pval_cutoff))
    mv("summary_table", new_name) 
    
  
}


```

For better annotations, we need a list over GO terms for Arabidopsis so we can align the GO ID's we have based from the enrichment with set genes.

```{r}

save(go_list, file = "go_list.RData")
save(summary_table_cons_0.05, file = "summary_table_cons_0.05.RData")
save(summary_table_angiosperms_0.05, file = "summary_table_angiosperms_0.05.RData")
save(summary_table_partial_3_0.05, file = "summary_table_partial_3_0.05.RData")

```
 
 
 

```{r}


wood_formation_terms <- c("wall","NAC" ,"phloem","lignin", "biosyn" ,"lignification","apoptosis", "apoptotic" ,"expansion", "growth", "camb","death", "cellulose", "xylem", "phloem", "ribosom", "transcrip", "transl")

summary_table_partial_3_keywords <- data.frame()
 
for (i in 1:length(wood_formation_terms)){
  
  word <- wood_formation_terms[i]
  df <- summary_table_partial_3_0.05 %>% 
    filter(grepl(word, `GO term`))
  
  if(nrow(df)>=1){
    df <- df %>% 
    mutate(key_word = word)
    
  summary_table_partial_3_keywords <- rbind(summary_table_partial_3_keywords, data.frame(df)) %>% 
    arrange(`key_word`)
  
  }
  
}


view(summary_table_partial_3_keywords)
cat("Number of unique id's: ", length(unique(summary_table_partial_3_keywords$GO.id)), " vs. nrows: ", nrow(summary_table_partial_3_keywords))



summary_table_ultra_cons_keywords <- data.frame()
 
for (i in 1:length(wood_formation_terms)){
  
  word <- wood_formation_terms[i]
  df <- summary_table_cons_0.05 %>% 
    filter(grepl(word, `GO term`))
  
  if(nrow(df)>=1){
    df <- df %>% 
    mutate(key_word = word)
    
  summary_table_ultra_cons_keywords <- rbind(summary_table_ultra_cons_keywords, data.frame(df)) %>% 
    arrange(`key_word`)
  
  }
  
}


view(summary_table_ultra_cons_keywords)
cat("Number of unique id's: ", length(unique(summary_table_ultra_cons_keywords$GO.id)), " vs. nrows: ", nrow(summary_table_ultra_cons_keywords))

```


**Comments**


- Some genes will have multiple GO terms, therefore some GO terms will be present in all tree groups.

- Should we relax the strictness of the definitions? Definitely explore the differences. In addition, is a p-value at 0.05 good?

- What is the next step? Can we group these genes? Also, we want expression profiles for the genes (which genes?)


```{r}

cat("Overlap of GO id's between conserved and angiosperms: ", sum(summary_table_cons_0.05$`GO id` %in% summary_table_angiosperms_0.05$`GO id`))

cat("Overlap of GO id's between conserved and gymnosperms: ", sum(summary_table_cons_0.05$`GO id` %in% summary_table_gymnosperms_0.05$`GO id`))


cat("Overlap of GO id's between angiosperms and gymnosperms: ", sum(summary_table_angiosperms_0.05$`GO id` %in% summary_table_gymnosperms_0.05$`GO id`))

```

```{r include=FALSE}

library(RColorBrewer)
myCol <- brewer.pal(3, "Accent")

venn.diagram(
  x = list(summary_table_cons_0.05$`GO id`, summary_table_angiosperms_0.05$`GO id`, summary_table_gymnosperms_0.05$`GO id`),
  category.names = c("Conserved" , "Angiosperm" , "Gymnosperm"),
  filename = "Figures/go_overlap_venn_diagram.png",
  output=T,
  disable.logging = T, 
  imagetype="png",
  # Circles
  lwd = 1,
  lty = 1,
  fill = myCol,

  # Numbers
  cex = .6,
  fontface = "bold",
  fontfamily = "sans",
  
  # Set names
  cat.cex = 1,
  cat.fontface = "bold",
  cat.default.pos = "outer",
  cat.pos = c(-27, 27, 135),
  cat.dist = c(0.055, 0.055, 0.085),
  cat.fontfamily = "sans",
  rotation = 1
)


```


```{r}

knitr::include_graphics("Figures/go_overlap_venn_diagram.png")

```



- NAC genes, vnd
- more functional info in arabidopsis
- use plantgenie

- relax definitions of conserved
- 

- visualisation of conserved genes ex. vnd or something






