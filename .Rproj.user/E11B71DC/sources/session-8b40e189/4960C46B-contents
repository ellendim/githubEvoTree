---
title: "Upset plots and gene tables"
author: "Ellen Dimmen Chapple"
date: "2023-08-25"
output: 
  html_document:
    code_folding: hide
    toc: true
    number_sections: true
    toc_float: true
    theme: lumen
editor_options:
  chunk_output_type: console
---



```{r message=FALSE, warning=FALSE}

library(dplyr)
library(tidyverse)
library(gdata)
library(UpSetR)
library(ggplot2)
library(viridis)
library(gridExtra)
library(ggthemes)
library(formattable)
library(DT)

```

# Read in files and create lists

1) File with orthologs
2) List with the names of comparison-table files, and transcription files

**RUN FOR CONSERVED (ALL PAIRS)**

```{r files and stuff}
ortholog_group_file <- read.delim("Data/DATA/Orthogroups.100323.tsv", header = TRUE, sep = "\t")

species_list <- c("Lodge", "Asp", "Nor","Scots","Birch","Cher")
combo <- data.frame(t(combn(species_list, 2)))

file_list_1 <- c()
for (i in 1:nrow(combo)){
  
  s1 <- combo[i, "X1"]
  s2 <- combo[i, "X2"]
  
  file_name <- paste0("Data/DATA/comparisonFiles/comparison-",s1,"_",s2,"-pearsonMR0.03no-table.RData")
  file_list_1 <- append(file_list_1, file_name, after = length(file_list_1))
    
}

file_list_2 <- c()
for (i in species_list){
  
  expr_name <- paste0("Data/DATA/transcriptomicsData/",i,"Wood_transcriptomics.txt")
  file_list_2 <- append(file_list_2, expr_name, after = length(file_list_2))
    
}

file_list_1
file_list_2

```



3) Ortholog group file - tidy


```{r message=FALSE, warning=FALSE}

ortholog_group_file <- read.delim("Data/DATA/Orthogroups.100323.tsv", header = TRUE, sep = "\t")


all_species <- c("Lodge", "Asp", "Nor","Scots","Birch","Cher")

ortho_general_filtering <- ortholog_group_file %>%
  mutate(Pinsyl.SHORT.cp.pep = Pinsyl.SHORT.pep) %>% 
  rename(
    Asp = Poptre.SHORT.pep,
    Birch = Betpen.SHORT.pep,
    Nor = Picabi.SHORT.pep,
    Scots = Pinsyl.SHORT.pep,
    Cher = Prunavi.SHORT.pep,
    Lodge = Pinsyl.SHORT.cp.pep,
    OrthoGroup = Orthogroup) %>% 
    select(OrthoGroup, all_species) %>% 
  mutate(Asp = gsub("Poptre_", "", Asp)) %>%
  mutate(Birch = gsub("Betpen_", "", Birch)) %>%
  mutate(Cher = gsub("Prunavi_", "", Cher)) 


  
```


# Ortholog groups: at least 1 co-expressed and significant gene pair

1) Filter the comparison table to only contain significant expressologs.
2) Arrange the gene pairs within each group an select the top one.
3) Create a new column and name it after the species pair - this will contain one. of the ortholog pairs.
4) The new column is left-joined to the original ortholog group column which contains all possible ortholog groups, thus creating NAs for the ortholog groups the species pair has no significant expressologs for.
5) This is done for all pairs.
6) We are left with a df with a column for each species pair were each row is either a gene representing an ortholog group, or NA. The cells are turned into 1's and 0's depending on the presence of a gene or not.

```{r message=FALSE, warning=FALSE}
# Co-expressed, and significant

ones_and_zeros <- data.frame(
  OrthoGroup = ortho_general_filtering$OrthoGroup)


for (x in file_list_1){
  if (file.exists(x)){ 
    load(x) 
    
    # Filter the comparison tables to just contain one gene pair for each ortholog group. 
    
    # x <- file_list_1[1]
    
    p_val <- comparison_table%>%
    mutate_at("Max.p.val", as.numeric) %>%
    filter(Max.p.val< 0.05) %>%  # only p-values under ...
    arrange(Max.p.val) %>%
    group_by(OrthoGroup) %>%
    slice(1) %>% 
    select(Species1, OrthoGroup, Max.p.val) %>% 
    ungroup()

    # ungroup() %>%
    # distinct(Species1,  .keep_all = T) %>%
    # distinct( Species2, .keep_all = T) %>%
    # arrange(Max.p.val)
    

    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1)
    
    # print(paste0("---------------- ", key_word_s1, "-", key_word_s2, " ----------------" ))
    # print(paste0("Number of non-unique ortholog groups: ", nrow(p_val)-length(unique(p_val$OrthoGroup)))) 
    # print(paste0("S1 duplicates: ", nrow(p_val)-length(unique(p_val$Species1)), " S2 duplicates: ",nrow(p_val)-length(unique(p_val$Species2)) ))
    
    new_col_name <-as.character(paste0(key_word_s1, "-", key_word_s2))
    


    # Rename one of the columns
    colnames(p_val)[1] = new_col_name

    p_val <- p_val %>%
      select(-c( Max.p.val))

    # Make a new column the same length as all the original ortholog data containing 'all possible' ortholog groups
    new_column <- ones_and_zeros %>%
      left_join(p_val, join_by(OrthoGroup == OrthoGroup)) %>%
      select(new_col_name)

    # print(paste0("Length after joining: ",nrow(new_column)))

    ones_and_zeros <- cbind(ones_and_zeros, new_column)
    

    
    }}

    
rownames(ones_and_zeros) <- ones_and_zeros$OrthoGroup
ones_and_zeros <- ones_and_zeros[,-c(1)]

# Create 0 where there are NAs, and 1's where there are no "0"'s
ones_and_zeros[is.na(ones_and_zeros)] <- 0
ones_and_zeros[ones_and_zeros != 0] <-1

ones_and_zeros <- ones_and_zeros %>%
   mutate_if(is.character, as.integer)

# Specify the order we want the output
col_order <- c(  "Asp-Birch",  "Asp-Cher", "Birch-Cher",  "Lodge-Asp", "Lodge-Birch", "Lodge-Cher",  "Asp-Nor","Nor-Birch", "Nor-Cher", "Scots-Birch", "Scots-Cher",  "Asp-Scots" ,  "Lodge-Scots", "Lodge-Nor", "Nor-Scots")

ones_and_zeros <- ones_and_zeros[, col_order]

# Checking to see how many rows are non-zero.  
no_empty_rows <- ones_and_zeros %>% 
  mutate(gene_sum = rowSums(.)) %>% 
  filter(gene_sum != 0)

paste0("Number of possible ortholog groups: ", dim(ortholog_group_file)[1], " vs. Number of genes found in at least 1 species pair (non-zero): ", dim(no_empty_rows)[1])

```




# All co-expressed genes both with and without p-value filtering

List of all go expressed genes as presented in the comparison tables (pairwise).

Co-expressed, but no p-value filtering.

```{r}


coexpr_genes <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),  
  GeneSpecies2 = c(),
  Species1pVal = c(), 
  Species2pVal = c(),
  MaxpVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the 
# no_empty_rows data frame that has only significantly co-expressed genes.

for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    

    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    
    genes <- comparison_table %>%
      mutate_at("Max.p.val", as.numeric)
      # filter(Max.p.val< 0.1) %>%  # only p-values under ...
      # group_by(OrthoGroup) %>%
      # arrange(Max.p.val) %>% 
      # slice(1) 

    
    coexpr_genes <- rbind(coexpr_genes, data.frame(
      OrthologGroup = genes$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(genes)),
      GeneSpecies1 = genes$Species1,
      Species2 = rep(key_word_s2, nrow(genes)),
      GeneSpecies2 = genes$Species2,
      Species1pVal = genes$Species1.p.val, 
      Species2pVal = genes$Species2.p.val,
      MaxpVal =  genes$Max.p.val
      
    )) 
    
  }
}

coexpr_genes <- coexpr_genes %>% 
  arrange(OrthologGroup)

```



Co-expressed genes with p-value filtering.

```{r}


significant_genes <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),  
  GeneSpecies2 = c(),
  MaxpVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the 
# no_empty_rows data frame that has only significantly co-expressed genes.

for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    

    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    
    genes <- comparison_table %>%
      mutate_at("Max.p.val", as.numeric) %>% 
      filter(Max.p.val < 0.1) # only p-values under ...
      # group_by(OrthoGroup) %>%
      # arrange(Max.p.val) %>% 
      # slice(1) 

    
    significant_genes <- rbind(significant_genes, data.frame(
      OrthologGroup = genes$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(genes)),
      GeneSpecies1 = genes$Species1,
      Species2 = rep(key_word_s2, nrow(genes)),
      GeneSpecies2 = genes$Species2,
      MaxpVal =  genes$Max.p.val
      
    )) 
    
  }
}

significant_genes <- significant_genes[with(significant_genes, (order(Species1, Species2))), ]

```




# Genes conserved in all species

Isolating the ortholog groups that are conserved in the different groups (all, angiosperms and gymnosperms) by using different definitions of conserved. Filter rows by using a threshold score. 

Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

Note - some ortholog groups will have non-significant gene pairs as we have selected ortholog groups with at least one co-expressed and significant gene pair. Thus some pairs within an ortholog group may be non-significant.

```{r}

# DATAFRAME WITH SUMS - ADD SUMMARY COLUMNS
df_with_sums <- ones_and_zeros %>% 
  mutate(Angiosperms = rowSums(. [1:3])) %>% 
  mutate(Between = rowSums(. [4:12]))%>%  
  mutate(Gymnosperms = rowSums(. [13:15])) %>% 
  mutate(Conserved = rowSums(. [1:15]))

# ANGIO_STRICT - ANGIOSPERM-SPECIFIC ORTHOLOG GROUPS 3/3

angios_strict <- df_with_sums %>% 
  filter(Between == 0) %>% 
  filter(Gymnosperms == 0)

# 2) Now we can add the 1's and 0's.
angios_strict$Angiosperms[angios_strict$Angiosperms < 3] <- 0 
angios_strict$Angiosperms[angios_strict$Angiosperms == 3] <- 1 



angios_strict <- angios_strict %>% 
  filter(Angiosperms == 1)

rows_strict_angio <- rownames(angios_strict)

# GYMNO_STRICT - GYMNOSPERM-SPECIFIC ORTHOLOG GROUPS 3/3
gymnos_strict <- df_with_sums %>% 
  filter(Between == 0) %>% 
  filter(Angiosperms == 0)


gymnos_strict$Gymnosperms[gymnos_strict$Gymnosperms < 3] <- 0 
gymnos_strict$Gymnosperms[gymnos_strict$Gymnosperms == 3] <- 1 


gymnos_strict <- gymnos_strict %>% 
  filter(Gymnosperms == 1)

rows_strict_gymnos <- rownames(gymnos_strict)

# CONS_STRICT - ORTHOLOG GROUPS CONSERVED FOR ALL PAIRS 15/15.
cons_strict <- df_with_sums %>% 
  filter(Angiosperms == 3) %>% 
  filter(Gymnosperms == 3) %>% 
  filter(Between == 9)

cons_strict$Conserved[cons_strict$Conserved < 15] <- 0 # 1->9 are changed to 0.
cons_strict$Conserved[cons_strict$Conserved == 15] <- 1 # 9 is changed to 1.

cons_strict <- cons_strict %>% 
  filter(Conserved == 1)


rows_strict_cons <- rownames(cons_strict)


cons_genes_all_species <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),
  GeneSpecies2 = c(),
  MaxPVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

# OBS! We need to redefine the file list as we only want angiosperm pairs.




for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    conserved <- comparison_table %>% 
      filter(OrthoGroup %in% rows_strict_cons)
    
    cons_genes_all_species <- rbind(cons_genes_all_species, data.frame(
      OrthologGroup = conserved$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(conserved)),
      GeneSpecies1 = conserved$Species1,
      Species2 = rep(key_word_s2, nrow(conserved)),
      GeneSpecies2 = conserved$Species2,
      MaxPVal =  conserved$Max.p.val
      
    )) 
    
  }
}


```

## Aspen genes from conserved ortholog groups

Take the df with all conserved ortholog groups and filter to only contain significant gene pairs. Then filter the ortholog group to only contain the conserved orthologs - then isolating only the aspen genes. Note! Not all aspen genes may be significant as we have filtered using ortholog groups that have at least 1 significant pair.

```{r}
# Only Asp genes from the strictly conserved ortholog groups
# There are genes within the conserved ortholog groups that are not significant
strictly_conserved_OGs<- cons_genes_all_species %>% 
  group_by(OrthologGroup) %>% 
  mutate_at("MaxPVal", as.numeric) %>% 
  filter(MaxPVal < 0.05) %>% 
  ungroup()

strictly_conserved_aspen <- ortho_general_filtering %>% 
  filter(OrthoGroup %in% strictly_conserved_OGs$OrthologGroup) %>% 
  select(OrthoGroup, Asp) %>% 
  separate_rows(Asp) %>% 
  mutate(Asp = gsub("\\.\\d\\.p\\d$", "", Asp)) %>% 
  as.data.frame()

```



# Partial 3 conservation

Same as above, but for only partial conservation.

```{r}


# Angiosperms
angios_partial_3 <- df_with_sums %>% 
  filter(Between == 0) %>% 
  filter(Gymnosperms == 0) 


angios_partial_3$Angiosperms[angios_partial_3$Angiosperms < 2] <- 0 
angios_partial_3$Angiosperms[angios_partial_3$Angiosperms >= 2] <- 1 

angios_partial_3 <- angios_partial_3 %>% 
  filter(Angiosperms == 1)

rows_partial3_angio <- rownames(angios_partial_3)


# Gymnosperms
gymnos_partial_3 <- df_with_sums %>% 
  filter(Angiosperms == 0) %>% 
  filter(Between == 0)

# 2) Now we can add the 1's and 0's.
gymnos_partial_3$Gymnosperms[gymnos_partial_3$Gymnosperms < 2] <- 0 
gymnos_partial_3$Gymnosperms[gymnos_partial_3$Gymnosperms == 2] <- 1 

gymnos_partial_3 <- gymnos_partial_3 %>% 
  filter(Gymnosperms == 1)

rows_partial3_gymnos <- rownames(gymnos_partial_3)

# For the conserved groups we allow 1) 2/3 for clades, and 2) 2/9 for between pairs.

conserved_partial_3 <- df_with_sums %>% 
  filter(Angiosperms >= 2) %>% 
  filter(Gymnosperms >= 2) %>% 
  filter(Between >=2)

conserved_partial_3$Conserved[conserved_partial_3$Conserved < 6] <- 0 # 1->9 are changed to 0.
conserved_partial_3$Conserved[conserved_partial_3$Conserved >= 6] <- 1 # 9 is changed to 1.

conserved_partial3_genes <- conserved_partial_3 %>% 
  filter(Conserved == 1)

rows_partial3 <- rownames(conserved_partial3_genes)

partial3_genes_all_species <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),
  GeneSpecies2 = c(),
  MaxPVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    partial_3 <- comparison_table %>% 
      filter(OrthoGroup %in% rows_partial3)
    
    partial3_genes_all_species <- rbind(partial3_genes_all_species, data.frame(
      OrthologGroup = partial_3$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(partial_3)),
      GeneSpecies1 = partial_3$Species1,
      Species2 = rep(key_word_s2, nrow(partial_3)),
      GeneSpecies2 = partial_3$Species2,
      MaxPVal =  partial_3$Max.p.val
      
    )) 
    
  }
}


```

## Aspen genes from partial 3 ortholog groups

```{r}

partial_3_OGs <- partial3_genes_all_species  %>% 
  group_by(OrthologGroup) %>% 
  mutate_at("MaxPVal", as.numeric) %>% 
  filter(MaxPVal < 0.05) %>% 
  ungroup()


 
partial_3_aspen <- ortho_general_filtering %>% 
  filter(OrthoGroup %in% partial_3_OGs$OrthologGroup) %>% 
  select(OrthoGroup, Asp) %>% 
  separate_rows(Asp) %>% 
  mutate(Asp = gsub("\\.\\d\\.p\\d$", "", Asp)) %>% 
  as.data.frame()
  
  
```


# Genes conserved in gymnosperms


```{r }


gymno_list <- c("Lodge", "Nor","Scots")

combo_gymno <- data.frame(t(combn(gymno_list, 2)))

# List of file names.

file_list_gymno<- c()
for (i in 1:nrow(combo_gymno)){
  
  s1 <- combo_gymno[i, "X1"]
  s2 <- combo_gymno[i, "X2"]
  
  file_name <- paste0("Data/DATA/comparisonFiles/comparison-",s1,"_",s2,"-pearsonMR0.03no-table.RData")
  file_list_gymno <- append(file_list_gymno, file_name, after = length(file_list_gymno))
    
}




```




```{r}

cons_genes_gymnosperms <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),  
  GeneSpecies2 = c(),
  Species1pVal = c(), 
  Species2pval = c(),
  MaxpVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

for (x in file_list_gymno){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    conserved <- comparison_table %>% 
      filter(OrthoGroup %in% rows_strict_gymnos) %>% 
      mutate_at("Max.p.val", as.numeric) 
    
    cons_genes_gymnosperms <- rbind(cons_genes_gymnosperms, data.frame(
      OrthologGroup = conserved$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(conserved)),
      GeneSpecies1 = conserved$Species1,
      Species2 = rep(key_word_s2, nrow(conserved)),
      GeneSpecies2 = conserved$Species2,
      Species1pVal = conserved$Species1.p.val, 
      Species2pval = conserved$Species2.p.val,
      MaxpVal =  conserved$Max.p.val
      
    )) 
    
  }
}


```


```{r}
# Only Asp genes from the strictly conserved ortholog groups

strict_gymnos <- cons_genes_gymnosperms$OrthologGroup
strictly_gymnos_aspen <- ortho_general_filtering %>% 
  filter(OrthoGroup %in% strict_gymnos) %>% 
  select(Asp) %>% 
  separate_rows(Asp) %>% 
  mutate(Asp = gsub("\\.\\d\\.p\\d$", "", Asp))

```



# Genes conserved in angiosperms


```{r }


angio_list <- c("Asp", "Birch","Cher")

combo_angio <- data.frame(t(combn(angio_list, 2)))

# List of file names.

file_list_angio <- c()
for (i in 1:nrow(combo_angio)){
  
  s1 <- combo_angio[i, "X1"]
  s2 <- combo_angio[i, "X2"]
  
  file_name <- paste0("Data/DATA/comparisonFiles/comparison-",s1,"_",s2,"-pearsonMR0.03no-table.RData")
  file_list_angio<- append(file_list_angio, file_name, after = length(file_list_angio))
    
}

conserved_genes_angio <- angios_strict %>% 
  filter(Conserved == 3)
rows_strict <- rownames(conserved_genes_angio)


```




```{r}

cons_genes_angiosperms <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),
  GeneSpecies2 = c(),
  MaxPVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

for (x in file_list_angio){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    conserved <- comparison_table %>% 
      filter(OrthoGroup %in% rows_strict_angio) %>% 
      mutate_at("Max.p.val", as.numeric) 
    
    cons_genes_angiosperms <- rbind(cons_genes_angiosperms, data.frame(
      OrthologGroup = conserved$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(conserved)),
      GeneSpecies1 = conserved$Species1,
      Species2 = rep(key_word_s2, nrow(conserved)),
      GeneSpecies2 = conserved$Species2,
      MaxPVal =  conserved$Max.p.val
      
    )) 
    
  }
}




```


# Partial conservation - Angiosperms


```{r}

partial3_genes_angiosperms <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),
  GeneSpecies2 = c(),
  MaxPVal = c()
  
)

for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    partial_3 <- comparison_table %>% 
      filter(OrthoGroup %in% rows_partial3_angio)
    
    partial3_genes_angiosperms <- rbind(partial3_genes_angiosperms, data.frame(
      OrthologGroup = partial_3$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(partial_3)),
      GeneSpecies1 = partial_3$Species1,
      Species2 = rep(key_word_s2, nrow(partial_3)),
      GeneSpecies2 = partial_3$Species2,
      MaxPVal =  partial_3$Max.p.val
      
    )) 
    
  }
}



```


# Partial conservation - Gymnosperms

```{r}

partial3_genes_gymnosperms <- data.frame(
  OrthologGroup = c(),
  Species1 = c(),
  GeneSpecies1 = c(),
  Species2 = c(),
  GeneSpecies2 = c(),
  MaxPVal = c()
  
)

# Each pairs comparison table is filtered to only contain orthologs from the strict definition of "conserved in all species" (see further up). These genes are 1) expressed, 2) significant (max.p.val < 0.05), and 3) present in all pairs.

for (x in file_list_1){
  if(file.exists(x)){
    load(x)
    
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) 
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) 
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) 
    
    partial_3 <- comparison_table %>% 
      filter(OrthoGroup %in% rows_partial3_gymnos)
    
    partial3_genes_gymnosperms <- rbind(partial3_genes_gymnosperms, data.frame(
      OrthologGroup = partial_3$OrthoGroup,
      Species1 = rep(key_word_s1, nrow(partial_3)),
      GeneSpecies1 = partial_3$Species1,
      Species2 = rep(key_word_s2, nrow(partial_3)),
      GeneSpecies2 = partial_3$Species2,
      MaxPVal =  partial_3$Max.p.val
      
    )) 
    
  }
}

```

```{r}
# Only Asp genes from the strictly conserved ortholog groups

strict_angios <- cons_genes_angiosperms  %>% 
  group_by(OrthologGroup) %>% 
  mutate_at("MaxPVal", as.numeric) %>% 
  filter(MaxPVal < 0.05) %>% 
  ungroup()


strictly_angios_aspen <- ortho_general_filtering %>% 
  filter(OrthoGroup %in% strict_angios$OrthologGroup) %>% 
  select(OrthoGroup, Asp) %>% 
  separate_rows(Asp) %>% 
  mutate(Asp = gsub("\\.\\d\\.p\\d$", "", Asp))

```


# Saving files

Should change to "save" so that the files are stored as R-data and not txt-files.

**Overview:**

*coexpr_genes* - All genes that are co-expressed. No filtering for conserved or significance.

*significant_genes* - All genes that are co-expressed, but also filtered for p-value.

*cons_genes_all_species* - All genes from ortholog groups with at least one significant and co-expressed gene pair for all pairs of species. Not all genes are significant.

*cons_genes_angiosperms* - All genes from ortholog groups with at least one significant and co-expressed gene pair for all pairs of angiosperms. Not all genes are significant.

*cons_genes_gymnosperms* - All genes from ortholog groups with at least one significant and co-expressed gene pair for all pairs of gymnosperms. Not all genes are significant.

*strictly_conserved_aspen* - Aspen genes for the ortholog groups that are strictly conserved in all species pairs.

*strictly_gymnos_aspen* - Aspen genes for the ortholog groups that are strictly conserved in gymnosperm pairs.

*strictly_angios_aspen* - Aspen genes for the ortholog groups that are strictly conserved in angiosperm pairs.

*partial3_genes_all_species* - All genes from ortholog groups that are partial 3 conserved (2/3 for clade pairs, 2/9 for between pairs). Not all genes are significant.

*partial_3_aspen* - Aspen genes for the ortholog groups that are partial 3 conserved in all species pairs.

*partial3_genes_angiosperms* - All ortholog groups that contain at co-expressed and significant expressologs in at least 2/3 pairs of only the angiosperms. Not all genes are significant.

*partial3_genes_gymnosperms* - All ortholog groups that contain at co-expressed and significant expressologs in at least 2/3 pairs of only the gymnosperms. Not all genes are significant.

```{r eval=FALSE}


# Use r-data
write.table(significant_genes, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/significant_genes.txt", row.names=FALSE)
write.table(coexpr_genes, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/all_co-expressed_genes.txt", row.names=FALSE)
write.table(cons_genes_all_species, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/cons_genes_all_species.txt", row.names=FALSE)
write.table(cons_genes_angiosperms, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/cons_genes_angiosperms.txt", row.names=FALSE)
write.table(cons_genes_gymnosperms, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/cons_genes_gymnosperms.txt", row.names=FALSE)

write.table(strictly_conserved_aspen, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/cons_genes_aspen.txt", row.names=FALSE)

write.table(strictly_gymnos_aspen, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/gymnosperms_genes_aspen.txt", row.names=FALSE)

write.table(strictly_angios_aspen, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/angiosperms_genes_aspen.txt", row.names=FALSE)

write.table(partial_3_aspen, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/partial_3_genes_aspen.txt", row.names=FALSE)

write.table(partial3_genes_all_species, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/partial3_genes_all_species.txt", row.names=FALSE)

write.table(partial3_genes_angiosperms, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/partial3_genes_angiosperms.txt", row.names=FALSE)

write.table(partial3_genes_gymnosperms, "~/NMBU/M60-BIAS/EvoTree/githubEvoTree/Data/DATA/textFiles/partial3_genes_gymnosperms.txt", row.names=FALSE)

```

**Creating file for easy search**

```{r eval=FALSE}

vect <- strictly_conserved_aspen$Asp
vectStr=paste(as.character(vect), sep="' '", collapse=",")
sink("outfile.txt")
cat(vectStr)
cat("\n")
sink()
```















