---
title: "Comparative heatmap"
author: "Ellen Dimmen Chapple"
date: "2023-08-25"
output: 
  html_document:
    code_folding: hide
    toc: true
    number_sections: true
    toc_float: true
    theme: paper
editor_options:
  chunk_output_type: console
---

# Libraries and lists

```{r Packages, message=FALSE, warning=FALSE}
library(dplyr)
library(tidyr)
library(ggplot2)
library(ComplexHeatmap)
library(tibble)
library(cowplot)
library(gplots)
library(gdata)
library(circlize)
library(ape)
library(ggtree)
library(gridExtra)
library(ggsci)
library(paletteer)
library(viridis)
library(forcats)


```



```{r name list}

species_list <- c("Lodge", "Asp", "Nor","Scots","Birch","Cher")
#"Asp", "Nor", ,  "Cher"
combo <- data.frame(t(combn(species_list, 2)))

```



```{r file names}

# List of file names.

file_list_1 <- c()
for (i in 1:nrow(combo)){
  
  s1 <- combo[i, "X1"]
  s2 <- combo[i, "X2"]
  
  file_name <- paste0("Data/DATA/comparisonFiles/comparison-",s1,"_",s2,"-pearsonMR0.03no-table.RData")
  file_list_1 <- append(file_list_1, file_name, after = length(file_list_1))
    
}


file_list_2 <- c()
for (i in species_list){
  
  expr_name <- paste0("Data/DATA/transcriptomicsData/transcriptomicsForHeatmaps/",i,"Wood_transcriptomics_hm.txt")
  file_list_2 <- append(file_list_2, expr_name, after = length(file_list_2))
    
}


```

# Heatmaps

## Correlation matrices

```{r corr matrix}

pval <- 0.1

for (x in file_list_1){
  if (file.exists(x)){ 

    load(x) 

    
    p_val <- comparison_table%>%
    select(Species1, Species2,OrthoGroup, Max.p.val) %>%
    mutate_at("Max.p.val", as.numeric) %>%
    filter(Max.p.val < pval) 


    p_val <- p_val %>% 
    ungroup() %>%
    distinct(Species1,  .keep_all = T) %>%
    distinct( Species2, .keep_all = T) %>% 
    arrange(Max.p.val)
    # 



    p_val_copy <- p_val # Copy the comparison table so it can be used for species 2.

    # This is for SPECIES 1
    key_word_s1 <- sapply(strsplit(x, "_"), "[",1) # Split the comparison file name...
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",2) # ... keeping the first species name.


    for (i in file_list_2){ # Go through the EXPRESSION DATA.
      if (grepl(key_word_s1, i)){ # If the string above contains key_word_1 ...
      expr_data <- read.delim(i) # ... read the table.

      s1_fs <- p_val %>% # Modify the p_val that was created above.
      left_join( expr_data,join_by(Species1 == Genes)) %>%
      select(-c("Species2", "Max.p.val", "OrthoGroup")) %>%
      as_tibble() %>%
      column_to_rownames(var = "Species1") %>%
      select(contains("1."))
      }}
    
    
    # This is for SPECIES 2
    key_word_s2 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s2 <- sapply(strsplit(key_word_s2, "-"), "[",1) # Creating key words by keeping the second species name.

    for (i in file_list_2){ # Go through the EXPRESSION DATA...again.
      if (grepl(key_word_s2, i)){ # If the string above contains key_word_2 ...
      expr_data <- read.delim(i) # ... read the table.

      s2_fs <- p_val %>% # Modify the p_val that was created above.
      left_join(expr_data, join_by(Species2 == Genes)) %>%
      select(-c("Species1", "Max.p.val", "OrthoGroup")) %>%
      as_tibble() %>%
      column_to_rownames(var = "Species2") %>%
      select(contains("1."))
  }}

    corr_matrix <- round(cor(s1_fs,s2_fs, method = "pearson"), 4) # Correlation matrix using the filtered + sorted
   

    
    
     new_name <- as.character(paste0("corr_",key_word_s1, "-",key_word_s2))
    mv("corr_matrix", new_name) 

    cat("Pair: ",key_word_s1, "-", key_word_s2)   
    cat( "\n")
    cat("Number of conserved genes directly from ComPlEx: ", nrow(comparison_table))
    cat( "\n")
    cat(paste0("Number of rows after removal of duplicates and with p-value under ", pval, ": ", nrow(p_val)))
    cat( "\n")
    cat( "\n")
    
    
    
    
  }
  
  }

```

## Transposing matrices

```{r transposing matrices v2}

to_transpose <- c("corr_Asp-Scots", "corr_Asp-Nor", "corr_Asp-Cher", "corr_Asp-Birch", "corr_Birch-Cher", "corr_Nor-Scots")

for(x in to_transpose){
    key_word_s1 <- sapply(strsplit(x, "_"), "[",2)
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",1)
    key_word_s2 <- sapply(strsplit(x, "-"), "[",2) 

    corr_t <- t(get(x))
    new_name <- as.character(paste0("corr_",key_word_s2, "-",key_word_s1))
    mv("corr_t", new_name) 
    rm(list = x)
    
   print(x) 
}

```


```{r diagonal}

for(i in file_list_2){

  species <- sapply(strsplit(i, "transcriptomicsForHeatmaps/"), "[",2)
  species <- sapply(strsplit(species, "Wood"), "[",1)
  print(species)

  expression <- read.delim(i) %>%
      select(contains("1."))

  corr_matrix <- round(cor(expression[,-1], method = "pearson"), 4)
  new_name <- as.character(paste0("corr_",species, "-",species))
  mv("corr_matrix", new_name) # rename the heatmaps for plotting in grid.

}
```



## Individual heatmaps

```{r heatmap as own loop v2}


# ------------------ HEATMAP ---------------------------------  

# As there have been changes to corr_list - we need to make a new list


corr_list <- c("corr_Cher-Asp", "corr_Birch-Asp", "corr_Lodge-Asp", "corr_Nor-Asp", "corr_Scots-Asp", "corr_Cher-Birch", "corr_Nor-Birch", "corr_Nor-Cher", "corr_Scots-Birch", "corr_Scots-Cher", "corr_Scots-Nor", "corr_Lodge-Birch", "corr_Lodge-Cher", "corr_Lodge-Nor", "corr_Lodge-Scots", "corr_Scots-Scots", "corr_Nor-Nor", "corr_Lodge-Lodge", "corr_Asp-Asp", "corr_Birch-Birch", "corr_Cher-Cher")



 # col_function_1 <- colorRamp2(c(0, 0.5 ,1), c("#0571b0", "#f7f7f7","#ca0020" ))


reference_hm <- data.frame(
  pair = c(),
  max_value = c(),
  min_value = c()
)

reference_bp <- data.frame(
  pair = c(),
  values = c()
)

# All on same sep legend

for(matrix in corr_list){


    key_word_s1 <- sapply(strsplit(matrix, "_"), "[",2)
    key_word_s1 <- sapply(strsplit(key_word_s1, "-"), "[",1)
    key_word_s2 <- sapply(strsplit(matrix, "-"), "[",2)
    
    lowest <- min(get(matrix))
    highest <- max(get(matrix))
    between <- mean(get(matrix))
    
    col_function_1 <- colorRamp2(c(lowest,  between, highest), c("#440154", "#316880","#FFB000")) # fde725
        
    # How does it work for colour blindness: https://davidmathlogic.com/colorblind/#%23E1BE6A-%2340B0A6 
    
    print(matrix)
  

   hm <-  Heatmap(get(matrix),show_column_names = FALSE, 
                  show_row_names = FALSE,
    width = ncol(get(matrix))*unit(5, "mm"),
    height = nrow(get(matrix))*unit(5, "mm"),
    row_order = 1:nrow(get(matrix)),
    column_order = 1:ncol(get(matrix)), col = col_function_1, show_heatmap_legend = F) 
  
    # Gather the max values to plot
  reference_hm <- rbind(reference_hm,
  data.frame(
  pair = matrix,
  max_value = highest,
  min_value = lowest))
  
  matrix_values <- c(get(matrix))
  
  reference_bp <- rbind(reference_bp, 
  data.frame(
  pair = matrix,
  values = matrix_values
  ))
   
    new_name <- as.character(paste0("hm-",key_word_s1, "-",key_word_s2))
    mv("hm", new_name) # rename the heatmaps for plotting in grid.
    
}

```

```{r }

# ------------ HM legend --------------------
# MAX VALUES

reference_hm 

col_function_2 <- colorRamp2(c(min(reference_hm$max_value), max(reference_hm$max_value)), c( "beige","#FFB000"))

lgd_2 = Legend(col_fun = col_function_2, title = "Correlation", title_gp = gpar(fontsize = 20) , legend_height = unit(12, "cm"), grid_width = unit(1, "cm"), labels_gp = gpar(fontsize = 20), at = c(0, 0.5, 1), title_gap =  unit(0.5, "cm"))

lgd_2_grob <- grid.grabExpr(draw(lgd_2))

for (i in 1:nrow(reference_hm)){
  corr_matrix <- c()
  
  pair <- reference_hm$pair[i]
  max_val <- reference_hm$max_value[i]
  
  corr_matrix <- matrix(max_val) # 10x10 matrix 

  
# all heatmaps on the same legend
  hm <-  Heatmap(corr_matrix,show_column_names = FALSE,
                  show_row_names = FALSE,
                  show_heatmap_legend = F,
                 col = col_function_2,
                 cell_fun = function(j, i, x, y, width, heigh, fill) {
        grid.text(sprintf("%.2f", corr_matrix[i, j]), x, y, gp = gpar(fontsize = 30))})
                 

  new_name <- as.character(paste0("legend-max-",pair))
  mv("hm", new_name) 
  print(pair)

}



legend_1 <- grid.grabExpr(print(`legend-max-corr_Birch-Asp`))
legend_2 <- grid.grabExpr(print(`legend-max-corr_Cher-Asp`)) #
legend_3 <- grid.grabExpr(print(`legend-max-corr_Cher-Birch`)) #
legend_4 <- grid.grabExpr(print(`legend-max-corr_Nor-Asp`)) #
legend_5 <- grid.grabExpr(print(`legend-max-corr_Nor-Birch`)) 
legend_6 <- grid.grabExpr(print(`legend-max-corr_Nor-Cher`))
legend_7 <- grid.grabExpr(print(`legend-max-corr_Scots-Asp`)) #
legend_8 <- grid.grabExpr(print(`legend-max-corr_Scots-Birch`))
legend_9 <- grid.grabExpr(print(`legend-max-corr_Scots-Cher`))
legend_10 <- grid.grabExpr(print(`legend-max-corr_Scots-Nor`))  
legend_11 <- grid.grabExpr(print(`legend-max-corr_Lodge-Asp`))
legend_12 <- grid.grabExpr(print(`legend-max-corr_Lodge-Birch`))
legend_13 <- grid.grabExpr(print(`legend-max-corr_Lodge-Cher`))
legend_14 <- grid.grabExpr(print(`legend-max-corr_Lodge-Nor`))
legend_15 <- grid.grabExpr(print(`legend-max-corr_Lodge-Scots`))
# Diag
legend_16 <- grid.grabExpr(print(`legend-max-corr_Asp-Asp`))
legend_17 <- grid.grabExpr(print(`legend-max-corr_Birch-Birch`))
legend_18 <- grid.grabExpr(print(`legend-max-corr_Cher-Cher`))
legend_19 <- grid.grabExpr(print(`legend-max-corr_Nor-Nor`))
legend_20 <- grid.grabExpr(print(`legend-max-corr_Scots-Scots`))
legend_21 <- grid.grabExpr(print(`legend-max-corr_Lodge-Lodge`))


hm_legend <-plot_grid(legend_16,NULL, NULL, NULL, NULL,NULL,
          legend_1, legend_17, NULL, NULL, NULL, NULL,
          legend_2, legend_3, legend_18, NULL, NULL, NULL,
          legend_4, legend_5, legend_6, legend_19, NULL, NULL,
          legend_7, legend_8, legend_9, legend_10, legend_20, NULL,
          legend_11, legend_12, legend_13, legend_14, legend_15, legend_21, nrow = 6, ncol = 6)

ledg_max <- hm_legend  + theme(panel.background = element_rect(fill = "#f7f7f7",colour = NA)) 

# MIN VALUES

reference_hm 

col_function_3 <- colorRamp2(c(min(reference_hm$min_value), max(reference_hm$min_value)), c( "#31688e", "beige"))

lgd_3 = Legend(col_fun = col_function_2, title = "Correlation", title_gp = gpar(fontsize = 20) , legend_height = unit(12, "cm"), grid_width = unit(1, "cm"), labels_gp = gpar(fontsize = 20), at = c(0, 0.5, 1), title_gap =  unit(0.5, "cm"))

lgd_3_grob <- grid.grabExpr(draw(lgd_3))

for (i in 1:nrow(reference_hm)){
  corr_matrix <- c()
  
  pair <- reference_hm$pair[i]
  min_val <- reference_hm$min_value[i]
  
  corr_matrix <- matrix(min_val) # 10x10 matrix 

  
# all heatmaps on the same legend
  hm <-  Heatmap(corr_matrix,show_column_names = FALSE,
                  show_row_names = FALSE,
                  show_heatmap_legend = F,
                 col = col_function_3,
                 cell_fun = function(j, i, x, y, width, heigh, fill) {
        grid.text(sprintf("%.2f", corr_matrix[i, j]), x, y, gp = gpar(fontsize = 30))})
                 

  new_name <- as.character(paste0("legend-min-",pair))
  mv("hm", new_name) 
  print(pair)

}



legend_min_1 <- grid.grabExpr(print(`legend-min-corr_Birch-Asp`))
legend_min_2 <- grid.grabExpr(print(`legend-min-corr_Cher-Asp`)) #
legend_min_3 <- grid.grabExpr(print(`legend-min-corr_Cher-Birch`)) #
legend_min_4 <- grid.grabExpr(print(`legend-min-corr_Nor-Asp`)) #
legend_min_5 <- grid.grabExpr(print(`legend-min-corr_Nor-Birch`)) 
legend_min_6 <- grid.grabExpr(print(`legend-min-corr_Nor-Cher`))
legend_min_7 <- grid.grabExpr(print(`legend-min-corr_Scots-Asp`)) #
legend_min_8 <- grid.grabExpr(print(`legend-min-corr_Scots-Birch`))
legend_min_9 <- grid.grabExpr(print(`legend-min-corr_Scots-Cher`))
legend_min_10 <- grid.grabExpr(print(`legend-min-corr_Scots-Nor`))  
legend_min_11 <- grid.grabExpr(print(`legend-min-corr_Lodge-Asp`))
legend_min_12 <- grid.grabExpr(print(`legend-min-corr_Lodge-Birch`))
legend_min_13 <- grid.grabExpr(print(`legend-min-corr_Lodge-Cher`))
legend_min_14 <- grid.grabExpr(print(`legend-min-corr_Lodge-Nor`))
legend_min_15 <- grid.grabExpr(print(`legend-min-corr_Lodge-Scots`))
# Diag
legend_min_16 <- grid.grabExpr(print(`legend-min-corr_Asp-Asp`))
legend_min_17 <- grid.grabExpr(print(`legend-min-corr_Birch-Birch`))
legend_min_18 <- grid.grabExpr(print(`legend-min-corr_Cher-Cher`))
legend_min_19 <- grid.grabExpr(print(`legend-min-corr_Nor-Nor`))
legend_min_20 <- grid.grabExpr(print(`legend-min-corr_Scots-Scots`))
legend_min_21 <- grid.grabExpr(print(`legend-min-corr_Lodge-Lodge`))


hm_legend_min <-plot_grid(legend_min_16,NULL, NULL, NULL, NULL,NULL,
          legend_min_1, legend_min_17, NULL, NULL, NULL, NULL,
          legend_min_2, legend_min_3, legend_min_18, NULL, NULL, NULL,
          legend_min_4, legend_min_5, legend_min_6, legend_min_19, NULL, NULL,
          legend_min_7, legend_min_8, legend_min_9, legend_min_10, legend_min_20, NULL,
          legend_min_11, legend_min_12, legend_min_13, legend_min_14, legend_min_15, legend_min_21, nrow = 6, ncol = 6)

ledg_min <-hm_legend_min + theme(panel.background = element_rect(fill = "#f7f7f7", colour = NA)) 


# ----------- Boxplots/Violinplots ---------------

# 
# 
# reference_hm <- reference_hm %>% 
#   mutate(pair= gsub("corr_", "", pair)) %>% 
#   arrange(desc(max_value))
# 
# reference_bp <- reference_bp %>% 
#   mutate(pair= gsub("corr_", "", pair)) %>% 
#   mutate(pair = factor(pair, levels = reference_hm$pair)) %>% 
#   arrange(pair)
# 
# # ("Scots-Scots", "Nor-Nor", "Lodge-Lodge", "Asp-Asp" ,    "Birch-Birch",
# #   "Cher-Cher"  , "Lodge-Scots", "Lodge-Nor" ,  "Scots-Nor" ,  "Cher-Birch" ,
# #  "Birch-Asp",   "Lodge-Birch" ,"Cher-Asp"  ,  "Lodge-Cher" , "Nor-Birch"  ,
# #  "Scots-Birch", "Nor-Cher" ,   "Lodge-Asp",   "Scots-Cher" , "Nor-Asp", "Scots-Asp" )
# 
# 
# # col1 <- "#fde725"
# # col2 <- "#fdeb50"
# # col3 <- "#fdf07c"
# # col4 <- "#fef392"
# # col5 <- "#fef5a7"
# # col6 <- "#fefce3"
# # col7 <- "#fefce9"
# 
# cols <-  c("#fde725","#fde725","#fde725","#fde725","#fde725","#fde725",  "#fdeb50","#fdf07c","#fdf07c","#fdf07c", "#fef392","#fef392","#fef392","#fef392","#fef392","#fef392", "#fef5a7", "#fef5a7", "#fef5a7","white", "white")
# 
# violin_plot <-  ggplot(reference_bp, aes(x=pair, y=values....matrix_values, fill = pair)) + geom_violin() + theme(legend.position = "none", axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) + labs(title = "Correlation range" , x = "Pairs", y = "Correlation") 
# violin_plot + scale_color_manual(values = cols, aesthetics = c( "fill")) 

# https://www.color-hex.com/color/fde725




# works for now - perhaps different order from highest to lowest max value, or relative to position in ?

```


## Plotting

```{r converting to grob v }

g1 <- grid.grabExpr(print(`hm-Birch-Asp`))
g2 <- grid.grabExpr(print(`hm-Cher-Asp`)) #
g3 <- grid.grabExpr(print(`hm-Cher-Birch`)) #
g4 <- grid.grabExpr(print(`hm-Nor-Asp`)) #
g5 <- grid.grabExpr(print(`hm-Nor-Birch`)) 
g6 <- grid.grabExpr(print(`hm-Nor-Cher`))
g7 <- grid.grabExpr(print(`hm-Scots-Asp`)) #
g8 <- grid.grabExpr(print(`hm-Scots-Birch`))
g9 <- grid.grabExpr(print(`hm-Scots-Cher`))
g10 <- grid.grabExpr(print(`hm-Scots-Nor`))  
g11 <- grid.grabExpr(print(`hm-Lodge-Asp`))
g12 <- grid.grabExpr(print(`hm-Lodge-Birch`))
g13 <- grid.grabExpr(print(`hm-Lodge-Cher`))
g14 <- grid.grabExpr(print(`hm-Lodge-Nor`))
g15 <- grid.grabExpr(print(`hm-Lodge-Scots`))
# Diag
g16 <- grid.grabExpr(print(`hm-Asp-Asp`))
g17 <- grid.grabExpr(print(`hm-Birch-Birch`))
g18 <- grid.grabExpr(print(`hm-Cher-Cher`))
g19 <- grid.grabExpr(print(`hm-Nor-Nor`))
g20 <- grid.grabExpr(print(`hm-Scots-Scots`))
g21 <- grid.grabExpr(print(`hm-Lodge-Lodge`))

plot_grid(g7)
plot_grid(g16)


```



```{r fig.height=40, fig.width=40}

# All rows, 30x30
# Grid is 5x5 BUT SHOULD USE A 6X6 PLOT WITH NULLS 

# Vertical main -with diags

 hm <-plot_grid(g16,NULL, NULL, NULL, NULL,NULL,
          g1, g17, NULL, NULL,NULL, NULL,
          g2, g3, g18, NULL, NULL, NULL,
          g4, g5, g6, g19, NULL, NULL,
          g7, g8, g9, g10, g20, NULL,
          g11, g12, g13, g14, g15, g21, nrow = 6, ncol = 6)

# Vertical main -no diags
# plot_grid(NULL,NULL,NULL, NULL, NULL, NULL,
#           g1, NULL, NULL, NULL, NULL, NULL,
#           g2, g3, NULL, NULL, NULL, NULL, 
#           g4, g5, g6, NULL, NULL, NULL,
#           g7, g8, g9, g10, NULL, NULL, 
#           g11, g12, g13, g14, g15, NULL, nrow = 6, ncol = 6)

hm +  theme_minimal() +  theme(panel.background = element_rect(fill = "#f7f7f7")) 

ledg_max
ledg_min



```




```{r tree, eval=FALSE, include=FALSE}

tree <- read.tree(text ="( ((Lodgepole_Pine, Scots_Pine), (Norway_Spruce)), ((Cherry, Birch),(Aspen))  );")


plot(tree)
tree_grob_hr <-ggtree(tree, ladderize = F,size = 1,color = "grey9") + geom_tiplab(size = 8, angle = -90, fontface = "italic",vjust = -2, hjust = 0.5) + xlim(-18, +25) + theme_tree("#f7f7f7")
tree_grob_hr 


tree_grob_vr <-ggtree(tree, ladderize = F,size = 1,color = "grey9") + geom_tiplab(size = 8, angle = 90, fontface = "italic",vjust = 2, hjust = 0.5) + xlim(-18, +25) + theme_tree("#f7f7f7")
tree_grob_vr 

tree_grob_sharp <- ggtree(tree, ladderize = F, size = 1,color = "grey9", layout = "slanted") + geom_tiplab(size = 7, angle = 90, fontface = "bold.italic",vjust = 2, hjust = 0.5) + xlim(NA, 10)+ theme_tree("#f7f7f7")
tree_grob_sharp



```




read: https://cran.r-project.org/web/packages/egg/vignettes/Ecosystem.html

```{r layout, eval=FALSE, include=FALSE}
library(jpeg)
phylo_image <- readJPEG("Figures/heatmaps_figs/tree_hor.jpeg")
hm_image <- readJPEG("figure-html/hm_5.2.jpeg")

rasterImage(phylo_image)

layout_matrix <- matrix(c(1,1,2,2,2,2,2,1,1,2,2,2,2,2),  ncol = 7, nrow = 2, byrow = T )
layout(layout_matrix)
rasterImage(phylo_image)


```


```{r}
# https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html


```




